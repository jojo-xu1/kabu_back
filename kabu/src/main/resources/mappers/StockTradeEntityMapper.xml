<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kabu.dev.dao.StockTradeEntityMapper" >
<resultMap id="BaseResultMap" type="com.kabu.dev.dto.StockTradeDto" >
    <id column="stock_id" property="stockId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="startbuydate" property="startbuydate" jdbcType="VARCHAR" />
    <result column="buy_price" property="buy_price" jdbcType="DECIMAL" />
    <result column="sell_price" property="sell_price" jdbcType="DECIMAL" />
    <result column="endselldate" property="endselldate" jdbcType="VARCHAR" />
    <result column="updateflag" property="updateflag" jdbcType="INTEGER" />
  </resultMap>
<sql id="Base_Column_List" >
    stock_id, type,startbuydate, buy_price, sell_price, endselldate, updateflag
</sql>
<select id="selectYesdata" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from stocktrade
    where updateflag = "1"
</select>
<delete id="deleteRecmByKey"  parameterType="java.lang.String" >
    delete from stocktrade
    where stock_id = #{stockId,jdbcType=VARCHAR}
  </delete>
<update id="updateDailyRecmBykey" parameterType="java.lang.String"  >
    update stocktrade 
    <set >   
        updateflag = "0",
    </set>
    where stock_id = #{stockId,jdbcType=VARCHAR}
  </update>
  
  <update id="updateStockTradeDate" parameterType="java.lang.String"  >
     update stocktrade,
   (
     select stock_id,today_price
     from stocktrade 
     where 1=1
     and stock_id not in
    (select stock_id from tempstocktrade  where type = 2)
     )newdata
    <set >   
     stocktrade.endselldate = #{endselldate,jdbcType=VARCHAR},
     stocktrade.sell_price = newdata.today_price
    </set>
  	where stocktrade.stock_id  =newdata.stock_id
  	and stocktrade.type = 2
  	and stocktrade.updateflag = 0
  </update>
  
   <update id="updateStockDateByWin" parameterType="java.lang.String"  >
    update stocktrade,
   (
     select stock_id,today_price
     from stocktrade 
     where 1=1
     and buy_price >1.0
     and today_price >1.0
     and (today_price-buy_price)/buy_price*100 > 2.0
     )newdata
    <set >   
     stocktrade.endselldate = #{endselldate,jdbcType=VARCHAR},
     stocktrade.sell_price = newdata.today_price
    </set>
    where stocktrade.stock_id  =newdata.stock_id
     and stocktrade.type = 2
     and stocktrade.updateflag = 0
  </update> 
  
   <update id="updateStockDateByLowRisk" parameterType="java.lang.String"  >
    update stocktrade,
   (
     select stock_id,today_price
     from stocktrade 
     where 1=1
     and buy_price >1.0
     and today_price >1.0
     and (today_price-buy_price)/buy_price*100 > 5.0
     )newdata
    <set >   
     stocktrade.endselldate = #{endselldate,jdbcType=VARCHAR},
     stocktrade.sell_price = newdata.today_price
    </set>
    where stocktrade.stock_id  =newdata.stock_id
     and stocktrade.type = 1
     and stocktrade.updateflag = 0
  </update> 
     <update id="updateStockDateByMidRisk" parameterType="java.lang.String"  >
    update stocktrade,
   (
     select stock_id,today_price
     from stocktrade 
     where 1=1
     and buy_price >1.0
     and today_price >1.0
     and (today_price-buy_price)/buy_price*100 > 10.0
     )newdata
    <set >   
     stocktrade.endselldate = #{endselldate,jdbcType=VARCHAR},
     stocktrade.sell_price = newdata.today_price
    </set>
    where stocktrade.stock_id  =newdata.stock_id
     and stocktrade.type = 3
     and stocktrade.updateflag = 0
  </update> 
    <update id="updateStockTradeUpdateFlag" parameterType="java.lang.String"  >
    update stocktrade 
    <set >   
     updateflag = 1
    </set>
    where updateflag =0 
    and( stock_id not in
    (select stock_id from tempstocktrade)
     or endselldate != ""
    )
  </update>
  
   <update id="updateprice" parameterType="java.lang.String"  >
    update stocktrade, 
	(
	select a.stock_id as stock_id,b.end_price as end_price
	from stocktrade a,realstock b
	where a.stock_id=b.stock_id
	and b.day_id = (select max(day_id) from realstock)
	) newdata 
    <set >   
     stocktrade.today_price = newdata.end_price
    </set>
	where stocktrade.stock_id = newdata.stock_id
  </update>
  
  <select id="selectFromTempStockTrade" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from tempstocktrade
    where stock_id not in
    (select stock_id from stocktrade where updateflag =0)
</select>
  
  <insert id="insertRecmByKey" parameterType="com.kabu.dev.dto.StockTradeDto" >
   insert into stocktrade (stock_id,startbuydate,type,buy_price,sell_price,endselldate,updateflag)
   values (#{stockId,jdbcType=VARCHAR},#{startbuydate,jdbcType=VARCHAR},#{type,jdbcType=INTEGER},
   #{buy_price,jdbcType=DECIMAL },#{sell_price,jdbcType=DECIMAL},
   #{endselldate,jdbcType=VARCHAR},#{updateflag,jdbcType=INTEGER})
  </insert>
  
<delete id="deletetempstocktrade"  parameterType="java.lang.String" >
    delete from tempstocktrade
</delete>

  <insert id="inserttempstocktrade" parameterType="com.kabu.dev.dto.StockTradeDto" >
   insert into tempstocktrade (stock_id,startbuydate,type,buy_price,sell_price,endselldate,updateflag)
   values (#{stockId,jdbcType=VARCHAR},#{startbuydate,jdbcType=VARCHAR},#{type,jdbcType=INTEGER},
   #{buy_price,jdbcType=DECIMAL },#{sell_price,jdbcType=DECIMAL},
   #{endselldate,jdbcType=VARCHAR},#{updateflag,jdbcType=INTEGER})
  </insert>

  <insert id="insertstocktrade" parameterType="com.kabu.dev.dto.StockTradeDto" >
   insert into stocktrade (stock_id,startbuydate,type,buy_price,sell_price,endselldate,updateflag)
   values (#{stockId,jdbcType=VARCHAR},#{startbuydate,jdbcType=VARCHAR},#{type,jdbcType=INTEGER},
   #{buy_price,jdbcType=DECIMAL },#{sell_price,jdbcType=DECIMAL},
   #{endselldate,jdbcType=VARCHAR},#{updateflag,jdbcType=INTEGER})
  </insert>
  <select id="selectNowStringDay" resultType="string" parameterType="java.lang.String" >
    select 
    max(day_id)
    from realstock
  </select>
</mapper>