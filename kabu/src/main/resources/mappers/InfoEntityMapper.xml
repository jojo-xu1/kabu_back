<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kabu.dev.dao.InfoEntityMapper" >
  <resultMap id="BaseResultMap" type="InfoEntity" >
    <id column="info_id" property="infoId" jdbcType="BIGINT" />
    <result column="column_id" property="columnId" jdbcType="VARCHAR" />
    <result column="stock_id" property="stockId" jdbcType="VARCHAR" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="link" property="link" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="key_word" property="keyWord" jdbcType="VARCHAR" />
    <result column="comments_count" property="commentsCount" jdbcType="INTEGER" />
    <result column="views_count" property="viewsCount" jdbcType="INTEGER" />
    <result column="published_at" property="publishedAt" jdbcType="TIMESTAMP" />
    <result column="datetime" property="datetime" jdbcType="VARCHAR" />
    <result column="author_name" property="authorName" jdbcType="VARCHAR" />
    <result column="post_id" property="postId" jdbcType="VARCHAR" />
    <result column="delflg" property="delflg" jdbcType="VARCHAR" />
    <result column="createuser" property="createuser" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateuser" property="updateuser" jdbcType="VARCHAR" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="BaseListResultMap" type="InfoEntity" >
    <id column="info_id" property="infoId" jdbcType="BIGINT" />
    <result column="column_id" property="columnId" jdbcType="VARCHAR" />
    <result column="stock_id" property="stockId" jdbcType="VARCHAR" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="link" property="link" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="comments_count" property="commentsCount" jdbcType="INTEGER" />
    <result column="views_count" property="viewsCount" jdbcType="INTEGER" />
    <result column="published_at" property="publishedAt" jdbcType="TIMESTAMP" />
    <result column="datetime" property="datetime" jdbcType="VARCHAR" />
    <result column="author_name" property="authorName" jdbcType="VARCHAR" />
    <result column="post_id" property="postId" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="InfoEntity" extends="BaseResultMap" >
    <result column="contents" property="contents" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <resultMap id="ResultMapList" type="com.kabu.dev.dto.RichTextOutDto" extends="BaseListResultMap" >
    <result column="contents" property="contents" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    info_id, column_id, stock_id, image_url, link, title, key_word, comments_count, views_count, 
    published_at, datetime, author_name, post_id, delflg, createuser, createtime, updateuser, 
    updatetime
  </sql>
  <sql id="Blob_Column_List" >
    contents
  </sql>
  <sql id="keyword_Column_List" >
    info_id, column_id, stock_id, image_url, link, title, comments_count, views_count, 
    published_at ,datetime, author_name, post_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from info
    where info_id = #{infoId,jdbcType=BIGINT}
  </select>
  <select id="selectList" resultMap="ResultMapList"  >
    select 
    <include refid="keyword_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from info
    
	<where>
		<if test="columnId != null">
			column_id = #{columnId}
		</if>
	</where>
	<if test="published_at != null">
			order by published_at DESC
	</if> 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from info
    where info_id = #{infoId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.kabu.dev.dto.RichTextInDto" >
    insert into info ( column_id, stock_id, image_url, title, key_word, contents,published_at, author_name)
    values (#{columnId,jdbcType=VARCHAR}, #{stockId,jdbcType=VARCHAR}, 
      #{imageUrl,jdbcType=VARCHAR},#{title,jdbcType=VARCHAR}, 
      #{keyWord,jdbcType=VARCHAR},#{contents,jdbcType=LONGVARCHAR}, #{publishedAt,jdbcType=TIMESTAMP},#{authorName,jdbcType=VARCHAR})
  </insert>
 
  <update id="updateByPrimaryKey"  >
    update info
    <set >
      <if test="columnId != null" >
        column_id = #{columnId,jdbcType=VARCHAR},
      </if>
      <if test="stockid != null" >
        stockId = #{stockid,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null" >
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="link != null" >
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="keyWord != null" >
        key_word = #{keyWord,jdbcType=VARCHAR},
      </if>
      <if test="commentsCount != null" >
        comments_count = #{commentsCount,jdbcType=INTEGER},
      </if>
      <if test="viewsCount != null" >
        views_count = #{viewsCount,jdbcType=INTEGER},
      </if>
      <if test="publishedAt != null" >
        published_at = #{publishedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="datetime != null" >
        datetime = #{datetime,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null" >
        author_name = #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="postId != null" >
        post_id = #{postId,jdbcType=VARCHAR},
      </if>
      <if test="delflg != null" >
        delflg = #{delflg,jdbcType=VARCHAR},
      </if>
      <if test="createuser != null" >
        createuser = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        updateuser = #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="contents != null" >
        contents = #{contents,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where info_id = #{infoId,jdbcType=BIGINT}
  </update>

</mapper>