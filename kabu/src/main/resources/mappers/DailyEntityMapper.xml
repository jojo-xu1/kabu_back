<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kabu.dev.dao.DailyEntityMapper" >
  <resultMap id="BaseResultMap" type="com.kabu.dev.dto.DailyOutDto" >
    <result column="day_id" property="dayId" jdbcType="VARCHAR" />
    <result column="start_price" property="startPrice" jdbcType="DECIMAL" />
    <result column="end_price" property="endPrice" jdbcType="DECIMAL" />
    <result column="high_price" property="highPrice" jdbcType="DECIMAL" />
    <result column="low_price" property="lowPrice" jdbcType="DECIMAL" />
    <result column="vol" property="vol" jdbcType="BIGINT" />
    <result column="startbuydate" property="startbuydate" jdbcType="VARCHAR" />
    <result column="endselldate" property="endselldate" jdbcType="VARCHAR" />
    <association property="stock" column="stock_id" select="com.kabu.dev.dao.StockEntityMapper.selectByPrimaryKey" ></association>
  </resultMap>
  <resultMap id="KlineMap" type="com.kabu.dev.dto.KLineDailyOutDto" >
    <id column="day_id" property="dayId" jdbcType="VARCHAR" />
    <result column="start_price" property="startPrice" jdbcType="DECIMAL" />
    <result column="end_price" property="endPrice" jdbcType="DECIMAL" />
    <result column="high_price" property="highPrice" jdbcType="DECIMAL" />
    <result column="low_price" property="lowPrice" jdbcType="DECIMAL" />
    <result column="vol" property="vol" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    stock_id, day_id, start_price, end_price, high_price, low_price, vol,'' as startbuydate,'' as endselldate
  </sql>
   <sql id="Base_Kline_List" >
    stock_id, day_id, start_price, end_price, high_price, low_price, vol
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from daily
    where stock_id = #{stockId,jdbcType=VARCHAR}
      and day_id = #{dayId,jdbcType=VARCHAR}
  </select>
  <select id="selectMAListLow" resultMap="BaseResultMap"  >
  select  rel.day_id as day_id, rel.start_price as start_price, rel.end_price as end_price, rel.high_price as high_price, rel.low_price as low_price, 
  rel.vol as vol,'' as startbuydate,'' as endselldate, rel.stock_id as stock_id
   from income inc,realstock rel
    where rel.stock_id=inc.stock_id
     and rel.day_id =(select max(day_id) from realstock)
     order by ROUND(CAST(inc.haitou_rate AS DOUBLE)/rel.end_price*100, 2) desc
     limit 2,9
  </select>
  
  <insert id="insertUserCollection">
    insert into usercollection ( stock_id, user_id, del_flag)
    values ( #{stockId,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},0 )
  </insert>

  <insert id="hisUserColltInsert">
    insert into historyusercollection ( stock_id, user_id, del_flag)
    values ( #{stockId,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR},0 )
  </insert>

  <select id="selectmyfavourite" resultMap="BaseResultMap"  >
  select  st.startbuydate as day_id, st.buy_price as start_price, st.sell_price as end_price, '' as high_price, '' as low_price, 
  '' as vol,st.startbuydate as startbuydate,st.endselldate as endselldate, st.stock_id as stock_id
    from usercollection uc,stocktrade st
    where uc.stock_id = st.stock_id
      and uc.user_id= #{LoginUserId,jdbcType=VARCHAR}
  </select>
   <select id="transHistory" resultMap="BaseResultMap"  >
  select  st.startbuydate as day_id, st.buy_price as start_price, st.sell_price as end_price, '' as high_price, '' as low_price, 
  '' as vol,st.startbuydate as startbuydate,st.endselldate as endselldate, st.stock_id as stock_id
    from usercollection uc,stocktrade st
    where uc.stock_id = st.stock_id
    and st.endselldate > 0
      and uc.user_id= #{LoginUserId,jdbcType=VARCHAR}
  </select>
  <select id="userTransHistory" resultMap="BaseResultMap"  >
  select  st.startbuydate as day_id, st.buy_price as start_price, st.sell_price as end_price, '' as high_price, '' as low_price, 
  '' as vol,st.startbuydate as startbuydate,st.endselldate as endselldate, st.stock_id as stock_id
    from historyusercollection uc,historytrade st
    where uc.stock_id = st.stock_id
    and st.endselldate > 0
      and uc.user_id= #{LoginUserId,jdbcType=VARCHAR}
      and st.del_flag = 0
      order by st.stock_id
  </select>

  <select id="selectFromStockTradeLow" resultMap="BaseResultMap"  >
  select  st.startbuydate as day_id, st.buy_price as start_price, st.sell_price as end_price, '' as high_price, '' as low_price, 
  '' as vol,st.startbuydate as startbuydate,st.endselldate as endselldate, st.stock_id as stock_id
    from stocktrade st
    where st.type =1 and st.updateflag = 0
  </select>
  <select id="selectFromStockTradeMid" resultMap="BaseResultMap"  >
  select  st.startbuydate as day_id, st.buy_price as start_price, st.sell_price as end_price, '' as high_price, '' as low_price, 
  '' as vol,st.startbuydate as startbuydate,st.endselldate as endselldate, st.stock_id as stock_id
    from stocktrade st
    where st.type =2 and st.updateflag = 0
  </select>
    <select id="selectFromStockTradeHigh" resultMap="BaseResultMap"  >
  select  st.startbuydate as day_id, st.buy_price as start_price, st.sell_price as end_price, '' as high_price, '' as low_price, 
  '' as vol,st.startbuydate as startbuydate,st.endselldate as endselldate, st.stock_id as stock_id
    from stocktrade st
    where st.type =3 and st.updateflag = 0
  </select>
  <select id="selectMA" resultMap="BaseResultMap"  >
    select 
    <include refid="Base_Column_List" />
    from daily
    where stock_id = #{stockId,jdbcType=VARCHAR}
      and day_id > #{dayId,jdbcType=VARCHAR}
    order by day_id
  </select>
  <select id="selectByIdMini"  resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from realstock
    where stock_id = #{stockId,jdbcType=VARCHAR}
    order by day_id desc
  </select>
    <select id="selectByIdMiniEx"  resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from realstock
    where stock_id = #{stockId,jdbcType=VARCHAR}
    and market in (1,2,512)
    order by day_id desc
    LIMIT 0,#{day}
  </select>
  <select id="selectByDailyId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from daily
    where day_id = #{dayId,jdbcType=VARCHAR}
  </select>
  <select id="selectHisColltById" resultType="com.kabu.dev.dto.UserCollectionDto">
    select stock_id from historyusercollection
    where stock_id = #{stockId,jdbcType=VARCHAR}
    and user_id = #{userId,jdbcType=VARCHAR}
  </select>
    <select id="selectstockpool" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from realstock
     where market in (1,2)
     and day_id = (select max(day_id) from realstock)
     and stock_id not in (select stock_id from stockmaster where industry='ETF')
     and stock_id not in('4342')
  </select>
    <select id="selectstockpoolhigh" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from realstock
     where market in (1,2,512)
     and day_id = (select max(day_id) from realstock)
     and stock_id not in (select stock_id from stockmaster where industry='ETF')
     and stock_id not in('4342')
  </select>
  <select id="selectKline" resultMap="KlineMap">
  	select 
  	<include refid="Base_Kline_List" />
  	from realstock
  	where stock_id=#{stockId} 
  	and start_price > 0
  	and end_price > 0
  	ORDER BY  day_id DESC
	LIMIT 0,#{day}
  </select>
</mapper>